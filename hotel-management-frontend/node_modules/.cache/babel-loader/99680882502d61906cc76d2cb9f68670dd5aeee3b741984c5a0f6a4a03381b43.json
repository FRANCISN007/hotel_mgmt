{"ast":null,"code":"// src/api/users.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000'; // Update this to your backend's base URL\n\n// Register a new user\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/user/register/`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n  }\n};\n\n// Login user\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/user/token`, new URLSearchParams({\n      username: credentials.username,\n      password: credentials.password\n    }), {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n  }\n};\n// Fetch all users (admin only)\nexport const fetchUsers = async token => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/user/users/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message;\n  }\n};\n\n// Delete a user (admin only)\nexport const deleteUser = async (username, token) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/user/users/${username}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","registerUser","userData","response","post","data","error","_error$response","message","loginUser","credentials","URLSearchParams","username","password","headers","_error$response2","fetchUsers","token","get","Authorization","_error$response3","deleteUser","delete","_error$response4"],"sources":["C:/Users/hp/Documents/MYPROJECT/HOTEL MGMT SYS/hotel-management-frontend/src/api/Api.js"],"sourcesContent":["// src/api/users.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000'; // Update this to your backend's base URL\r\n\r\n// Register a new user\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/user/register/`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n\r\n// Login user\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_BASE_URL}/user/token`,\r\n      new URLSearchParams({\r\n        username: credentials.username,\r\n        password: credentials.password,\r\n      }),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n// Fetch all users (admin only)\r\nexport const fetchUsers = async (token) => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/user/users/`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n\r\n// Delete a user (admin only)\r\nexport const deleteUser = async (username, token) => {\r\n  try {\r\n    const response = await axios.delete(`${API_BASE_URL}/user/users/${username}`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || error.message;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,YAAY,iBAAiB,EAAEE,QAAQ,CAAC;IAC7E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC/B,GAAGJ,YAAY,aAAa,EAC5B,IAAIW,eAAe,CAAC;MAClBC,QAAQ,EAAEF,WAAW,CAACE,QAAQ;MAC9BC,QAAQ,EAAEH,WAAW,CAACG;IACxB,CAAC,CAAC,EACF;MACEC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC;AACD;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACmB,GAAG,CAAC,GAAGlB,YAAY,cAAc,EAAE;MAC9Dc,OAAO,EAAE;QAAEK,aAAa,EAAE,UAAUF,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAc,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAd,KAAK,CAACH,QAAQ,cAAAiB,gBAAA,uBAAdA,gBAAA,CAAgBf,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC;;AAED;AACA,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAOT,QAAQ,EAAEK,KAAK,KAAK;EACnD,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACuB,MAAM,CAAC,GAAGtB,YAAY,eAAeY,QAAQ,EAAE,EAAE;MAC5EE,OAAO,EAAE;QAAEK,aAAa,EAAE,UAAUF,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAiB,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAjB,KAAK,CAACH,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBlB,IAAI,KAAIC,KAAK,CAACE,OAAO;EAC7C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
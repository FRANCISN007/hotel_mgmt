{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\MYPROJECT\\\\HOTEL MGMT SYS\\\\hotel-management-frontend\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authToken, setAuthToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check for token in local storage on app load\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      setAuthToken(token);\n      fetchUserDetails(token);\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/user/token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAuthToken(data.access_token);\n        localStorage.setItem(\"authToken\", data.access_token);\n        fetchUserDetails(data.access_token);\n        navigate(\"/\");\n      } else {\n        alert(\"Invalid credentials. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n    }\n  };\n  const logout = () => {\n    setAuthToken(null);\n    setUser(null);\n    localStorage.removeItem(\"authToken\");\n    navigate(\"/login\");\n  };\n  const fetchUserDetails = async token => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/user/details\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        logout(); // Token may have expired\n      }\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5PyqrLd8bl93XbT6RXRRzSC1tRw=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return React.useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authToken","setAuthToken","user","setUser","navigate","token","localStorage","getItem","fetchUserDetails","login","username","password","response","fetch","method","headers","body","URLSearchParams","ok","data","json","access_token","setItem","alert","error","console","logout","removeItem","Authorization","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["C:/Users/hp/Documents/MYPROJECT/HOTEL MGMT SYS/hotel-management-frontend/src/contexts/authContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check for token in local storage on app load\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (token) {\r\n      setAuthToken(token);\r\n      fetchUserDetails(token);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/user/token\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n        body: new URLSearchParams({ username, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAuthToken(data.access_token);\r\n        localStorage.setItem(\"authToken\", data.access_token);\r\n        fetchUserDetails(data.access_token);\r\n        navigate(\"/\");\r\n      } else {\r\n        alert(\"Invalid credentials. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setAuthToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem(\"authToken\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const fetchUserDetails = async (token) => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/user/details\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } else {\r\n        logout(); // Token may have expired\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user details:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authToken, user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => React.useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
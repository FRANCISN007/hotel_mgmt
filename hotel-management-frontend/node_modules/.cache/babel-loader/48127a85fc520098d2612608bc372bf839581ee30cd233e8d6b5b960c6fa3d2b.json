{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\MYPROJECT\\\\HOTEL MGMT SYS\\\\hotel-management-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // useNavigate hook for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(); // Create a context for user authentication\n\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null); // State to store user data\n  const [loading, setLoading] = useState(true); // Loading state while checking authentication\n  const navigate = useNavigate(); // Hook for navigation\n\n  // Function to check if the user is authenticated\n  const checkAuth = async () => {\n    try {\n      // Check if user token is stored in localStorage\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setUser(null); // No token means user is not authenticated\n        setLoading(false); // Stop loading\n        return;\n      }\n\n      // You can add an API call here to validate the token or get the user info\n      // For now, we assume the token is valid and set a mock user\n      const mockUser = {\n        username: \"JohnDoe\",\n        role: \"admin\",\n        password: \"fcn\",\n        adminPassword: \"pass\"\n      }; // Mock user (replace with API call)\n\n      setUser(mockUser); // Set the authenticated user\n    } catch (error) {\n      console.error(\"Error in authentication check:\", error);\n      setUser(null); // If there's an error, treat user as not authenticated\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  useEffect(() => {\n    checkAuth(); // Check authentication when the app loads\n  }, []);\n  const login = userData => {\n    // Assume successful login, store token in localStorage\n    localStorage.setItem(\"token\", userData.token);\n    setUser(userData.user); // Set the user data after successful login\n    navigate(\"/dashboard\"); // Redirect to dashboard after login\n  };\n  const logout = () => {\n    // Clear user data and token\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    navigate(\"/login\"); // Redirect to login page\n  };\n\n  // Provide context values to all child components\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to access the AuthContext in any component\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","checkAuth","token","localStorage","getItem","mockUser","username","role","password","adminPassword","error","console","login","userData","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/hp/Documents/MYPROJECT/HOTEL MGMT SYS/hotel-management-frontend/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";  // useNavigate hook for navigation\r\n\r\nconst AuthContext = createContext();  // Create a context for user authentication\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);  // State to store user data\r\n  const [loading, setLoading] = useState(true);  // Loading state while checking authentication\r\n  const navigate = useNavigate();  // Hook for navigation\r\n\r\n  // Function to check if the user is authenticated\r\n  const checkAuth = async () => {\r\n    try {\r\n      // Check if user token is stored in localStorage\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      if (!token) {\r\n        setUser(null);  // No token means user is not authenticated\r\n        setLoading(false);  // Stop loading\r\n        return;\r\n      }\r\n\r\n      // You can add an API call here to validate the token or get the user info\r\n      // For now, we assume the token is valid and set a mock user\r\n      const mockUser = { username: \"JohnDoe\", role: \"admin\", password: \"fcn\", adminPassword: \"pass\" };  // Mock user (replace with API call)\r\n\r\n      setUser(mockUser);  // Set the authenticated user\r\n    } catch (error) {\r\n      console.error(\"Error in authentication check:\", error);\r\n      setUser(null);  // If there's an error, treat user as not authenticated\r\n    } finally {\r\n      setLoading(false);  // Stop loading\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();  // Check authentication when the app loads\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    // Assume successful login, store token in localStorage\r\n    localStorage.setItem(\"token\", userData.token);\r\n    setUser(userData.user);  // Set the user data after successful login\r\n    navigate(\"/dashboard\");  // Redirect to dashboard after login\r\n  };\r\n\r\n  const logout = () => {\r\n    // Clear user data and token\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n    navigate(\"/login\");  // Redirect to login page\r\n  };\r\n\r\n  // Provide context values to all child components\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook to access the AuthContext in any component\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC,CAAC,CAAE;;AAEtC,OAAO,SAASQ,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACzC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/C,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjC;EACA,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACVL,OAAO,CAAC,IAAI,CAAC,CAAC,CAAE;QAChBE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;QACpB;MACF;;MAEA;MACA;MACA,MAAMM,QAAQ,GAAG;QAAEC,QAAQ,EAAE,SAAS;QAAEC,IAAI,EAAE,OAAO;QAAEC,QAAQ,EAAE,KAAK;QAAEC,aAAa,EAAE;MAAO,CAAC,CAAC,CAAE;;MAElGZ,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDb,OAAO,CAAC,IAAI,CAAC,CAAC,CAAE;IAClB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC,CAAC,CAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,KAAK,GAAIC,QAAQ,IAAK;IAC1B;IACAV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACX,KAAK,CAAC;IAC7CL,OAAO,CAACgB,QAAQ,CAACjB,IAAI,CAAC,CAAC,CAAE;IACzBI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAE;EAC3B,CAAC;EAED,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCnB,OAAO,CAAC,IAAI,CAAC;IACbG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;EACvB,CAAC;;EAED;EACA,oBACET,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEE,OAAO;MAAEc,KAAK;MAAEG;IAAO,CAAE;IAAArB,QAAA,EAC3DA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;;AAEA;AAAA3B,EAAA,CAxDgBF,YAAY;EAAA,QAGTJ,WAAW;AAAA;AAAAkC,EAAA,GAHd9B,YAAY;AAyD5B,OAAO,MAAM+B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACkC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}